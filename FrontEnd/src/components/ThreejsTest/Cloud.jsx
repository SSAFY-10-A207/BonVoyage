/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client'
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";
import dynamic from "next/dynamic";

const Cloud = ({ position, speed, amplitude }) => {
  const { nodes } = useGLTF("./models/cloud/model.gltf");

  const meshRef = useRef();

  useFrame(() => {
    if (meshRef.current) {
      // 클라우드의 y 좌표를 Sin 함수를 사용하여 위아래로 움직이도록 설정
      meshRef.current.position.y = position[1] + Math.sin((performance.now() / 2000) * speed) * amplitude;
    }
  });

  return (
    // <group {...props} dispose={null} >
    //   <mesh geometry={nodes.Mball001.geometry}>
    //     <meshStandardMaterial
    //       envMapIntensity={2}
    //       transparent
    //     />
    //   </mesh>
    // </group>
    <group position={position} ref={meshRef} dispose={null} scale={[3.3, 3, 3]}>
      <mesh geometry={nodes.Mball001.geometry} material={nodes.Mball001.material} />
      <mesh geometry={nodes.Mball001.geometry}>
        <meshStandardMaterial
          envMapIntensity={2}
          opacity={0.7} // 투명도 설정
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/cloud/model.gltf");

export default Cloud